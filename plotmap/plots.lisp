(defrule enchanted (actor1 actor2)
  (:color 'orange :other-attrs '(dir forward)))

;; Legend hack
(defplot legend "Legend")
(defnode legend-character :actor "Character" legend)
(defnode objective :objective "Objective" legend)
(defnode item-example :item "Item" legend)
(defnode group-example :group "Group" legend)
(defnode ally1 :actor "Allies" legend)
(defnode ally2 :actor "Allies" legend)
(defnode weak-ally1 :actor "Weak allies" legend)
(defnode weak-ally2 :actor "Weak allies" legend)
(defnode group-member :actor "Member" legend)
(defnode group :group "Group" legend)
(defnode enemy1 :actor "Enemies" legend)
(defnode enemy2 :actor "Enemies" legend)
(defnode enemy :actor "Enemy" legend)
(defnode unaware :actor "Unaware target" legend)
(defnode watcher :actor "Watcher" legend)
(defnode watched :actor "Watched" legend)
(defnode seeker :actor "Seeker" legend)
(defnode sought :objective "Sought" legend)
(defnode possessor :actor "Possessor" legend)
(defnode owner :actor "Owner" legend)
(defnode item :item "Item" legend)
(defnode enchanter :actor "Enchanter" legend)
(defnode enchanted :actor "Enchanted" legend)

(allies ally1 ally2)
(allies-weak weak-ally1 weak-ally2)
(member-of group-member group)
(enemies enemy1 enemy2)
(enemy-oneway enemy unaware)
(watching watcher watched)
(seeking seeker sought)
(possesses possessor sought)
(owns owner item)
(enchanted enchanter enchanted)
